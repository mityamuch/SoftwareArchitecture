services:
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet


  income-service:
    build:
      context: budgeting-system
      dockerfile: income_service/Dockerfile
    container_name: income_service
    environment:
      - MONGODB_URL=mongodb://root:example@mongodb:27017/
    ports:
      - "8003:8003"
    depends_on:
      mongodb:
        condition: service_healthy

    
  db:
    image: postgres:14
    container_name: db
    environment:
      - POSTGRES_USER=stud
      - POSTGRES_PASSWORD=stud
      - POSTGRES_DB=archdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stud -d archdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network
  user-service:
    tty: true
    build:
      context: budgeting-system
      dockerfile: user_service/Dockerfile
    container_name: user_service
    environment:
      - DATABASE_URL=postgresql://stud:stud@db:5432/archdb
    ports:
      - "8002:8002"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    

networks:
  my_network:
    name: my_network
    driver: bridge
volumes:
  postgres-data:
  mongodb-data: